{"version":3,"sources":["../../../lib/connections/slack/socket.js"],"names":[],"mappings":";;;;;;;;;;;;kBAAsB,IAAI;;;;sBACP,cAAc;;;;sBACd,cAAc;;;;kBAClB,UAAU;;;;;;;IAKJ,MAAM;AAEd,WAFQ,MAAM,CAEb,GAAG,EAAE,IAAI,EAAE;0BAFJ,MAAM;;AAGvB,QAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,KAAK,CAAC,8DAA8D,CAAC,CAAA;;AAE9F,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACrB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;AACvB,QAAI,CAAC,UAAU,GAAG,oBAAc,GAAG,CAAC,CAAA;GACrC;;eARkB,MAAM;;WAUlB,mBAAG;AACR,UAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3D,UAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D,UAAI,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAChE,UAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KAC7D;;;WAEgB,2BAAC,OAAO,EAAE;AACzB,UAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;AAC9B,UAAI,SAAS,GAAG,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAA;AAChE,0BAAO,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,aAAO,gBAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;KAClC;;;WAEa,0BAAG;AACf,0BAAO,IAAI,uCAAqC,IAAI,CAAC,IAAI,sBAAmB,CAAA;KAC7E;;;WAEc,2BAAG;AAChB,0BAAO,IAAI,wCAAsC,IAAI,CAAC,IAAI,sBAAmB,CAAA;KAC9E;;;WAEc,yBAAC,GAAG,EAAE;AACnB,0BAAO,KAAK,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAA;KAC1D;;;SAlCkB,MAAM;;;qBAAN,MAAM","file":"socket.js","sourcesContent":["import WebSocket from 'ws'\nimport Logger from '../../logger'\nimport Config from '../../config'\nimport Es from '../../es'\n\n// TODO: when losing internet connection no failure currently surfaces.\n// TODO: after fixing ^^, do an exponential connection backoff retry, copy it from nes\n\nexport default class Socket {\n\n  constructor(url, team) {\n    if (!url || !team) throw Error('Must pass url and team to make a new slack socket connection')\n\n    this.name = team.name\n    this.index = team.index\n    this.connection = new WebSocket(url)\n  }\n\n  connect() {\n    this.connection.on('open', this.didReceiveOpen.bind(this));\n    this.connection.on('close', this.didReceiveClose.bind(this));\n    this.connection.on('message', this.didReceiveMessage.bind(this))\n    this.connection.on('error', this.didReceiveError.bind(this))\n  }\n\n  didReceiveMessage(message) {\n    let data = JSON.parse(message)\n    let newRecord = {index: this.index, type: data.type, body: data}\n    Logger.info(data);\n    return Es.client.index(newRecord)\n  }\n\n  didReceiveOpen() {\n    Logger.info(`native - open: The connection to ${this.name} has been opened`)\n  }\n\n  didReceiveClose() {\n    Logger.info(`native - close: The connection to ${this.name} has been closed`)\n  }\n\n  didReceiveError(err) {\n    Logger.error('Slack websocket error event received', err)\n  }\n}\n"]}